create table nhl_stats.nhl_teams
(
    id               int64, 
    name             String,
    link             String,
    venue            JSON,
    abbreviation     String,
    teamName         String,
    locationName     String,
    firstYearOfPlay  Int32,
    division         JSON,
    conference       JSON,
    franchise        JSON,
    shortName        String,
    officialSiteUrl  String,
    franchiseId      int64,
    active           int64,

)
    engine = MergeTree()
        ORDER BY id;

create table nhl_stats.season_stats
    (
        stat_gamesPlayed Int32,
        stat_wins Int32,
        stat_losses Int32,
        stat_ot Int32,
        stat_pts Int32,
        stat_ptPctg Float32,
        stat_goalsPerGame Float32,
        stat_goalsAgainstPerGame Float32,
        stat_evGGARatio Float32,
        stat_powerPlayPercentage Float32,
        stat_powerPlayGoals Float32,
        stat_powerPlayGoalsAgainst Float32,
        stat_powerPlayOpportunities Float32,
        stat_penaltyKillPercentage Float32,
        stat_shotsPerGame Float32,
        stat_shotsAllowed Float32,
        stat_winScoreFirst Float32,
        stat_winOppScoreFirst Float32,
        stat_winLeadFirstPer Float32,
        stat_winLeadSecondPer Float32,
        stat_winOutshootOpp Float32,
        stat_winOutshotByOpp Float32,
        stat_faceOffsTaken Float32,
        stat_faceOffsWon Float32,
        stat_faceOffsLost Float32,
        stat_faceOffWinPercentage Float32,
        stat_shootingPctg Float32,
        stat_savePctg Float32,
        team_id Int32,
        team_name String,
        team_link String,
        displayName String,
        type_gameType_id String,
        type_gameType_description String,
        type_gameType_postseason Int32,
        load_dttm_utc DateTime
) engine = MergeTree PARTITION BY toYYYY(load_dttm_utc)
        ORDER BY id;

create table nhl_stats.season_ranks
    (
        stat_wins Int32,
        stat_losses Int32,
        stat_ot Int32,
        stat_pts Int32,
        stat_ptPctg Int32,
        stat_goalsPerGame Int32,
        stat_goalsAgainstPerGame Int32,
        stat_evGGARatio Int32,
        stat_powerPlayPercentage Int32,
        stat_powerPlayGoals Int32,
        stat_powerPlayGoalsAgainst Int32,
        stat_powerPlayOpportunities Int32,
        stat_penaltyKillOpportunities Int32,
        stat_penaltyKillPercentage Int32,
        stat_shotsPerGame Int32,
        stat_shotsAllowed Int32,
        stat_winScoreFirst Int32,
        stat_winOppScoreFirst Int32,
        stat_winLeadFirstPer Int32,
        stat_winLeadSecondPer Int32,
        stat_winOutshootOpp Int32,
        stat_winOutshotByOpp Int32,
        stat_faceOffsTaken Int32,
        stat_faceOffsWon Int32,
        stat_faceOffsLost Int32,
        stat_faceOffWinPercentage Int32,
        stat_savePctRank Int32,
        stat_shootingPctRank Int32,
        team_id Int32,
        team_name String,
        team_link String,
        displayName String,
        type_gameType String,
        load_dttm_utc DateTime
) engine = MergeTree PARTITION BY toYYYY(load_dttm_utc)
        ORDER BY id;


create view nhl_stats.season_stats_actual (
    stat_gamesPlayed Int32,
        stat_wins Int32,
        stat_losses Int32,
        stat_ot Int32,
        stat_pts Int32,
        stat_ptPctg Float32,
        stat_goalsPerGame Float32,
        stat_goalsAgainstPerGame Float32,
        stat_evGGARatio Float32,
        stat_powerPlayPercentage Float32,
        stat_powerPlayGoals Float32,
        stat_powerPlayGoalsAgainst Float32,
        stat_powerPlayOpportunities Float32,
        stat_penaltyKillPercentage Float32,
        stat_shotsPerGame Float32,
        stat_shotsAllowed Float32,
        stat_winScoreFirst Float32,
        stat_winOppScoreFirst Float32,
        stat_winLeadFirstPer Float32,
        stat_winLeadSecondPer Float32,
        stat_winOutshootOpp Float32,
        stat_winOutshotByOpp Float32,
        stat_faceOffsTaken Float32,
        stat_faceOffsWon Float32,
        stat_faceOffsLost Float32,
        stat_faceOffWinPercentage Float32,
        stat_shootingPctg Float32,
        stat_savePctg Float32,
        team_id Int32,
        team_name String,
        team_link String,
        displayName String,
        type_gameType_id String,
        type_gameType_description String,
        type_gameType_postseason Int32,
        load_dttm_utc DateTime
) as
with actual as (
    select max(load_dttm_utc) as max_date from nhl_stats.season_stats
)
select 
        stat_wins,
        stat_losses,
        stat_ot,
        stat_pts,
        stat_ptPctg,
        stat_goalsPerGame,
        stat_goalsAgainstPerGame,
        stat_evGGARatio,
        stat_powerPlayPercentage,
        stat_powerPlayGoals,
        stat_powerPlayGoalsAgainst,
        stat_powerPlayOpportunities,
        stat_penaltyKillOpportunities,
        stat_penaltyKillPercentage,
        stat_shotsPerGame,
        stat_shotsAllowed,
        stat_winScoreFirst,
        stat_winOppScoreFirst,
        stat_winLeadFirstPer,
        stat_winLeadSecondPer,
        stat_winOutshootOpp,
        stat_winOutshotByOpp,
        stat_faceOffsTaken,
        stat_faceOffsWon,
        stat_faceOffsLost,
        stat_faceOffWinPercentage,
        stat_savePctRank,
        stat_shootingPctRank,
        team_id,
        team_name ,
        team_link ,
        displayName ,
        type_gameType
from nhl_stats.season_stats cross join actual where loac_dttm = max_date;

create view nhl_stats.season_ranks_actual (
    stat_gamesPlayed Int32,
        stat_wins Int32,
        stat_losses Int32,
        stat_ot Int32,
        stat_pts Int32,
        stat_ptPctg Float32,
        stat_goalsPerGame Float32,
        stat_goalsAgainstPerGame Float32,
        stat_evGGARatio Float32,
        stat_powerPlayPercentage Float32,
        stat_powerPlayGoals Float32,
        stat_powerPlayGoalsAgainst Float32,
        stat_powerPlayOpportunities Float32,
        stat_penaltyKillPercentage Float32,
        stat_shotsPerGame Float32,
        stat_shotsAllowed Float32,
        stat_winScoreFirst Float32,
        stat_winOppScoreFirst Float32,
        stat_winLeadFirstPer Float32,
        stat_winLeadSecondPer Float32,
        stat_winOutshootOpp Float32,
        stat_winOutshotByOpp Float32,
        stat_faceOffsTaken Float32,
        stat_faceOffsWon Float32,
        stat_faceOffsLost Float32,
        stat_faceOffWinPercentage Float32,
        stat_shootingPctg Float32,
        stat_savePctg Float32,
        team_id Int32,
        team_name String,
        team_link String,
        displayName String,
        type_gameType_id String,
        type_gameType_description String,
        type_gameType_postseason Int32,
        load_dttm_utc DateTime
) as
with actual as (
    select max(load_dttm_utc) as max_date from nhl_stats.season_ranks
)
select 
        stat_gamesPlayed,
        stat_wins,
        stat_losses,
        stat_ot,
        stat_pts,
        stat_ptPctg ,
        stat_goalsPerGame ,
        stat_goalsAgainstPerGame ,
        stat_evGGARatio ,
        stat_powerPlayPercentage ,
        stat_powerPlayGoals ,
        stat_powerPlayGoalsAgainst ,
        stat_powerPlayOpportunities ,
        stat_penaltyKillPercentage ,
        stat_shotsPerGame ,
        stat_shotsAllowed ,
        stat_winScoreFirst ,
        stat_winOppScoreFirst ,
        stat_winLeadFirstPer ,
        stat_winLeadSecondPer ,
        stat_winOutshootOpp ,
        stat_winOutshotByOpp ,
        stat_faceOffsTaken ,
        stat_faceOffsWon ,
        stat_faceOffsLost ,
        stat_faceOffWinPercentage,
        stat_shootingPctg ,
        stat_savePctg ,
        team_id,
        team_name ,
        team_link ,
        displayName ,
        type_gameType_id ,
        type_gameType_description ,
        type_gameType_postseason,
from nhl_stats.season_ranks cross join actual where loac_dttm = max_date;